@* 共通レイアウト *@
<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>@ViewBag.Title</title>

    @*
        bootstrapを適用/使用するためのリンク。
        ASP.NET MVCで生成されるHTMLは、bootstrapを使用することを想定した作りになっている。
        そのため、特別なことをしなくてもモダンなレイアウトに整形される。
    *@
    <link href="~/Content/bootstrap.min.css" rel="stylesheet" />
</head>
<body>
    @* ログインしている状態でのみ共通レイアウトの上部に表示するもの。 *@
    <header>
        @if (Request.IsAuthenticated)  // Request.IsAuthenticatedプロパティ: 認証済みならtrueとなる。
        {
            <nav class="navbar navbar-default navbar-fixed-top">
                <div class="container-fluid">
                    <div class="navbar-header">
                        @* 狭い画面サイズ時のハンバーガーメニューを設定 *@
                        <button type="button" class="navbar-toggle" data-toggle="collapse" data-target="#naviForAuthenticatedUser">
                            @* 音声ブラウザにメニューがあることを伝えています *@
                            <span class="sr-only">Toggle navigation</span>
                            @* ハンバーガーボタンの3本線を表現 *@
                            <span class="icon-bar"></span>
                            <span class="icon-bar"></span>
                            <span class="icon-bar"></span>
                        </button>
                        @*タイトル*@
                        <a class="navbar-brand" href="#">TODO Web App</a>
                    </div>

                    <div class="collapse navbar-collapse" id="naviForAuthenticatedUser">
                        <ul class="nav navbar-nav">
                            <li>
                                @Html.ActionLink("TODO一覧", "Index", new { Controller = "Todoes" })
                            </li>
                            @* ログインユーザーがAdministrators Roleに所属している場合は、ユーザー管理画面へのリンクを表示する。 *@
                            @if (User.IsInRole("Administrators"))  // User.IsInRoleメソッド: 現在のログインユーザーが指定されたロールに属しているかどうかを判定する。
                            {
                                <li>
                                    @* ユーザー管理画面へのリンク(UsersControllerのIndexアクションへのリンク)を作成。 *@
                                    @Html.ActionLink("ユーザー管理", "Index", new { Controller = "Users" })
                                </li>
                            }
                        </ul>
                        <ul class="nav navbar-nav navbar-right">
                            <li class="navbar-text">Hello, @User.Identity.Name</li>
                            <li>
                                @* ログアウトのリンク(LoginControllerのSignOutアクションへのリンク)を作成。 *@
                                @Html.ActionLink("サインアウト", "SignOut", new { Controller = "Login" })
                            </li>
                        </ul>
                    </div>
                </div>
            </nav>
        }
    </header>

    @*containerクラスを指定すると左右に適切な余白を設定してくれる *@
    <div class="container" style="padding-top: 35px">
        @RenderBody()
    </div>

    <script src="~/Scripts/jquery-3.4.1.min.js"></script>
    <script src="~/Scripts/bootstrap.min.js"></script>
</body>
</html>
